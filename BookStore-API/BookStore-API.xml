<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BookStore-API</name>
    </assembly>
    <members>
        <member name="T:BookStore_API.Controllers.AuthorsController">
            <summary>
            Endpoint used to interact with the Authors in the book store's database
            Controllers talk to the DTO objects
            </summary>
        </member>
        <member name="M:BookStore_API.Controllers.AuthorsController.GetAuthors">
            <summary>
            Get All Authors
            need an endpoint for getting all books
            ActionResult comes from MVC
            </summary>
            <returns>List of Authors</returns>
        </member>
        <member name="M:BookStore_API.Controllers.AuthorsController.GetAuthor(System.Int32)">
            <summary>
            Get an author by ID
            </summary>
            <param name="id"></param>
            <returns>An Author's record</returns>
        </member>
        <member name="M:BookStore_API.Controllers.AuthorsController.Create(BookStore_API.DTOs.AuthorCreateDTO)">
            <summary>
            Creates an Author
            </summary>
            <param name="author"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore_API.Controllers.AuthorsController.Update(System.Int32,BookStore_API.DTOs.AuthorUpdateDTO)">
            <summary>
            Updates an author
            </summary>
            <param name="id"></param>
            <param name="author"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore_API.Controllers.AuthorsController.Delete(System.Int32)">
            <summary>
            Deletes an author
            </summary>
            <param name="id"></param>
            <param name="author"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore_API.Controllers.AuthorsController.GetControllerActionNames">
            <summary>
            What controller and action is making a given call
            Just to improve the log
            </summary>
            <returns></returns>
        </member>
        <member name="M:BookStore_API.Controllers.AuthorsController.InternalError(System.String)">
            <summary>
            Present consistant error status message
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:BookStore_API.Controllers.BooksController">
            <summary>
            Interacts with the Books table
            </summary>
        </member>
        <member name="M:BookStore_API.Controllers.BooksController.GetBooks">
            <summary>
            Get all Books
            </summary>
            <returns>A List of books</returns>
        </member>
        <member name="M:BookStore_API.Controllers.BooksController.GetBook(System.Int32)">
            <summary>
            Gets a Book by Id
            </summary>
            <param name="id"></param>
            <returns>A Book Record</returns>
        </member>
        <member name="M:BookStore_API.Controllers.BooksController.Create(BookStore_API.DTOs.BookCreateDTO)">
            <summary>
            Creates a new Book
            </summary>
            <param name="BookDTO"></param>
            <returns>Book object</returns>
        </member>
        <member name="M:BookStore_API.Controllers.BooksController.Update(System.Int32,BookStore_API.DTOs.BookUpdateDTO)">
            <summary>
            Update a record in the Book database
            </summary>
            <param name="Id"></param>
            <param name="BookDTO"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore_API.Controllers.BooksController.Delete(System.Int32)">
            <summary>
            Delete record with given Id
            </summary>
            <param name="Id"></param>
            <param name="BookDTO"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore_API.Controllers.BooksController.GetControllerActionNames">
            <summary>
            What controller and action is making a given call
            Just to improve the log
            </summary>
            <returns></returns>
        </member>
        <member name="M:BookStore_API.Controllers.BooksController.InternalError(System.String)">
            <summary>
            Present consistant error status message
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:BookStore_API.Controllers.HomeController">
            <summary>
            This is a test API controller
            </summary>
        </member>
        <member name="M:BookStore_API.Controllers.HomeController.Get">
            <summary>
            Get values
            </summary>
            <returns></returns>
        </member>
        <member name="M:BookStore_API.Controllers.HomeController.Get(System.Int32)">
            <summary>
            Get a value
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore_API.Controllers.UsersController.Login(BookStore_API.Data.UserDTO)">
            <summary>
            User Login endppoint
            </summary>
            <param name="userDTO"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore_API.Controllers.UsersController.GenerateJSONWebToken(Microsoft.AspNetCore.Identity.IdentityUser)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore_API.Controllers.UsersController.GetControllerActionNames">
            <summary>
            What controller and action is making a given call
            Just to improve the log
            </summary>
            <returns></returns>
        </member>
        <member name="M:BookStore_API.Controllers.UsersController.InternalError(System.String)">
            <summary>
            Present consistant error status message
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:BookStore_API.Data.ApplicationDbContext">
            <summary>
            Definitions for how to connect to the database
            </summary>
        </member>
        <member name="T:BookStore_API.DTOs.AuthorDTO">
            <summary>
            Use this DTO class to enforce certain validations
            Users interact with this class - not the Author class
            Set any limits on user interaction with database objects here
            </summary>
        </member>
        <member name="T:BookStore_API.DTOs.BookDTO">
            <summary>
            DTO = Data Transfer Object
            DTO's carry data between processes, they encapsulate data and
            send it from one subsystem fo an application to another
            </summary>
        </member>
        <member name="T:BookStore_API.DTOs.BookCreateDTO">
            <summary>
            client save mapping
            </summary>
        </member>
        <member name="T:BookStore_API.DTOs.BookUpdateDTO">
            <summary>
            Define what the client can update in a record
            </summary>
        </member>
        <member name="T:BookStore_API.Mappings.Maps">
            <summary>
            Let automapper understand the mappings b/n classes and DTO
            DTO is object from user, Only matching properties are matched
            so if user makes spelling error in name it's ignored
            In the field of programming a data transfer object (DTO ) 
            is an object that carries data between processes. 
            </summary>
        </member>
        <member name="T:BookStore_API.Services.AuthorRepository">
            <summary>
            Setup baseline CRUD operations for Author table
            </summary>
        </member>
    </members>
</doc>
